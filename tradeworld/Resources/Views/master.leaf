<!doctype html>
<html lang="en" data-theme="dracula">
<head>
  <meta charset="utf-8">
  <meta viewpoint name="viewport" content="width=device-width, initial-scale=1">
  <title>Tradeworld: #import("title")</title>
  <link rel="stylesheet" type="text/css" href="/css/app.css">
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
  <link rel="manifest" href="/site.webmanifest">
</head>
<body class="flex-col bg-base-300 flex min-h-screen xl:mb-12 pb-8">
  <div class="navbar bg-base-100">
    <div class="navbar-start">
      <div class="dropdown">
        <label tabindex="0" class="btn btn-ghost lg:hidden">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h8m-8 6h16" /></svg>
        </label>
        <ul tabindex="0" class="menu menu-compact dropdown-content mt-3 p-2 shadow bg-base-100 rounded-box w-52">
          <li><a id="BuildHeaderList" href="/game">Build</a></li>
          <li><a id="TechHeaderList" href="/tech">Tech</a></li>
          <li><a id="TradeHeaderList" href="/trade">Trade</a></li>
          <li><a id="EventHeaderList"href="/mission">Event</a></li>
        </ul>
      </div>
      <a href="/game" class="btn btn-ghost normal-case text-xl">
        <img src="/img/logo/Logo_Alt_Big_icon_2x.png" class="h-8" alt="logo">
      </a>
      <div id="activeUsers" class="my-auto ml-4 text-info font-bold tooltip hidden lg:flex tooltip-bottom"></div>
    </div>
    <div class="navbar-center hidden lg:flex">
      <a id="BuildHeader" href="/game" class="btn px-12 xl:mx-6 mx-1">Build</a>
      <a id="TechHeader" href="/tech" class="btn px-12 xl:mx-6 mx-1">Tech</a>
      <a id="TradeHeader" href="/trade" class="btn px-12 xl:mx-6 mx-1">Trade</a>
      <a id="EventHeader" href="/mission" class="btn px-12 xl:mx-6 mx-1">Event</a>
    </div>
    <div class="navbar-end">
      <div class="pr-4">
        <label for="my-modal" class="btn">?</label>

        <!-- Put this part before </body> tag -->
        <input type="checkbox" id="my-modal" class="modal-toggle" />
        <label for="my-modal" class="modal cursor-pointer">
          <label class="modal-box relative" for="">
            #import("helpText")
            <div class="modal-action">
              <label for="my-modal" class="btn btn-secondary">Close</label>
            </div>
          </label>
        </label>
      </div>
      <div class="flex-col justify-end">
        <div id="username" class="flex-row flex my-auto justify-end items-end mr-4 text-info font-bold"></div>
        <div class="flex-row flex my-auto justify-end items-end">
          <a href="/logout" class="link link-secondary mr-4">Logout</a>
        </div>
      </div>
    </div>
  </div>
  <div class="md:w-1/2 mx-auto lg:px-10 mb-2">
    <div id="resources" class="flex-row flex rounded-lg">
      <div id="scoreDiv" class="flex-1 flex md:space-x-2 bg-base-100 py-3 rounded-lg mx-1 my-1 px-1">
        <div class="mx-auto md:flex-row md:flex md:text-base text-xs">
          <div class="text-accent font-bold md:mr-1 text-center md:text-left">Score:</div>
          <div id="score" class="text-neutral-content text-center md:text-left">0</div>
        </div>
      </div>
    </div>
  </div>
  #import("body")
  <footer class="footer flex bg-base-100 fixed !bottom-0 left-0 right-0 h-10">
    <div class="my-auto ml-4 text-xs grid grid-cols-2 min-w-full">
      <div class="md:mx-0 mx-auto text-center md:text-left">
        A game by Samuel Bishop and Ethan Michaelis  (<a class="link link-success" href="https://github.com/dannflor/startup/">Source</a>)
      </div>
      <div class="fixed right-4">
        Pixelart by <a class="link link-success" href="https://2058.itch.io/">green guy</a>
      </div>
    </div>
  </footer>
</body>

<script>

fetch("/user/active").then(res => res.text()).then(data => {
  if (data == 0) {
    document.getElementById("activeUsers").classList.add("hidden")
  }
  else if (data == 1) {
    document.getElementById("activeUsers").innerText += data + " active user";
  }
  else {
    document.getElementById("activeUsers").innerText += data + " active users";
  }
  fetch("/user/active/all").then(res => res.json()).then(data => {
    document.getElementById("activeUsers").setAttribute("data-tip", "");
    data.forEach(user => {
      //Add user to data-tooltip
      document.getElementById("activeUsers").setAttribute("data-tip", document.getElementById("activeUsers").getAttribute("data-tip") + user + " ");
    });
  });
});

fetch("/user/me").then(res => res.text()).then(data => {
    document.getElementById("username").innerHTML = data;
});
setHeader('#import("title")')
function setHeader(element) {
  document.getElementById(element + "Header").classList.add("btn-primary");
  document.getElementById(element + "HeaderList").classList.add("text-primary");
  if (element == "Trade") {
    let tradeHeader = document.getElementById(element + "Header");
    let tradeHeaderList = document.getElementById(element + "HeaderList");
    tradeHeader.classList.add("btn-primary");
    tradeHeaderList.classList.add("text-primary");
    let newTradeHeader = document.createElement("div");
    newTradeHeader.classList.add("tooltip", "tooltip-bottom", "tooltip-primary");
    newTradeHeader.setAttribute("data-tip", "Open a new trade");
    let newTradeLabel = document.createElement("label");
    newTradeLabel.setAttribute("for", "trade-modal");
    newTradeLabel.classList.add("btn", "btn-primary", "px-8", "xl:mx-6", "mx-1");
    newTradeLabel.textContent = "New Trade";
    newTradeHeader.appendChild(newTradeLabel);
    tradeHeader.parentNode.replaceChild(newTradeHeader, tradeHeader);
    let newTradeLabelList = document.createElement("label");
    newTradeLabelList.setAttribute("for", "trade-modal");
    newTradeLabelList.classList.add("text-primary", "font-bold");
    newTradeLabelList.textContent = "New Trade";
    tradeHeaderList.parentNode.replaceChild(newTradeLabelList, tradeHeaderList);
  }
}

</script>
#import("js")
</html>