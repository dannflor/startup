<!doctype html>
<html lang="en" data-theme="dracula">
<head>
  <meta charset="utf-8">
  <meta viewpoint name="viewport" content="width=device-width, initial-scale=1">
  <title>Tradeworld</title>
  <link rel="stylesheet" type="text/css" href="/css/app.css">
</head>

<body class="flex-col bg-base-300 flex h-screen xl:mb-12">
  <div class="navbar bg-base-100">
    <div class="navbar-start">
      <div class="dropdown">
        <label tabindex="0" class="btn btn-ghost lg:hidden">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h8m-8 6h16" /></svg>
        </label>
        <ul tabindex="0" class="menu menu-compact dropdown-content mt-3 p-2 shadow bg-base-100 rounded-box w-52">
          <li><a class="text-primary">Build</a></li>
          <li><a href="/tech">Tech</a></li>
          <li><a href="/trade">Trade</a></li>
        </ul>
      </div>
      <a href="/game" class="btn btn-ghost normal-case text-xl">Tradeworld</a>
    </div>
    <div class="navbar-center hidden lg:flex">
      <a class="btn btn-primary px-12 mx-8">Build</a>
      <a href="/tech" class="btn px-12 mx-8">Tech</a>
      <a href="/trade" class="btn px-12 mx-8">Trade</a>
    </div>
    <div class="navbar-end">
      <a href="/logout" class="link link-secondary mr-4">Logout</a>
    </div>
  </div>
  <div class="md:w-1/2 mx-auto lg:px-10 mb-2">
    <div class="flex-row flex rounded-lg">
      #for(resource in resources):
        <div class="flex-1 flex md:space-x-2 bg-base-100 py-3 rounded-lg mx-1 my-1 px-1">
          <div class="mx-auto md:flex-row md:flex md:text-base text-xs">
            <div class="text-info font-bold md:mr-1 text-center md:text-left">#(resource.name):</div>
            <div class="text-neutral-content text-center md:text-left">#(resource.count)</div>
          </div>
        </div>
      #endfor
    </div>
  </div>
  <div class="divider mx-auto md:w-1/2 !my-0.5"></div>
  <grid id="gameGrid" class="xl:[scale:3] lg:[scale:2] md:[scale:1] [scale:0.5] xl:mt-56 lg:mt-40 mt-10 -ml-8 md:mx-auto">
  </grid>

  <footer class="footer flex bg-base-100 fixed !bottom-0 left-0 right-0 h-10">
    <div class="my-auto ml-4 text-xs grid grid-cols-2 min-w-full">
      <div class="md:mx-0 mx-auto text-center md:text-left">
        A game by Samuel Bishop and Ethan Michaelis  (<a class="link link-success" href="https://github.com/dannflor/startup/">Source</a>)
      </div>
      <div class="fixed right-4">
        Pixelart by <a class="link link-success" href="https://2058.itch.io/">green guy</a>
      </div>
    </div>
  </footer>
  <!-- Put this part before </body> tag -->
  <input type="checkbox" id="grid-cell-modal" class="modal-toggle" />
  <label for="grid-cell-modal" class="modal cursor-pointer">
    <label class="modal-box max-w-2xl flex flex-col" for="">
      <h3 class="text-7xl font-serif font-extrabold text-primary mx-auto">Build</h3>
      <div class="divider"></div>
      <select class="select select-primary w-full max-w-md">
        <option disabled selected>Select a building</option>
        <option>Shack</option>
        <option>Lumber Camp</option>
        <option>Mine</option>
        <option>Tower</option>
      </select>
      <span class="mt-2 text-3xl font-bold text-secondary">Building Title</span>
      <span class="text-xl mt-2 font-bold text-warning">Cost: </span>
      100 wood, 50 stone
      <span class="mt-2 text-xl font-bold text-info">Produces: </span>
      10 stone/hour
      <span class="mt-2 text-xl font-bold text-success">Bonuses: </span>
      +5 for adjacent quarries
      <br>
      +3 for adjacent blacksmiths
      <div class="justify-end justify-items-end flex">
        <a class="btn btn-primary w-24 mt-4">Build</a>
        <a class="btn btn-secondary w-24 mt-4 ml-4 mr-auto" href="/game">Cancel</a>
      </div>
      
    </label>
  </label>
</body>

<script>
  class Building {
    constructor(cell) {
      this.name = cell.name;
      this.img = cell.img;
      this.cost = cell.cost;
    }
  }
  const gridElement = document.getElementById('gameGrid');
  const res = fetch('/grid').then(res => 
    res.json().then(data => {
      //Parse json into Building objects
      const cells = data.map(cell => new Building(cell));
      for (let i = 0; i < cells.length; i++) {
        const cell = cells[i];

        let gridCell = document.createElement('label');
        gridCell.setAttribute('for', 'grid-cell-modal');
       
        let img = document.createElement('img');
        img.setAttribute('src', cell.img);
        img.setAttribute('class', '');
        img.setAttribute('style', 'image-rendering: crisp-edges; image-rendering: pixelated;');
        gridCell.appendChild(img);
        gridElement.appendChild(gridCell);
      }
    })
  );

</script>

</html>